#include "AutonomousCommand.h"

AutonomousCommand::AutonomousCommand() 
{
	Requires(CommandBase::shooter);
	Requires(CommandBase::aimer);
	SetTimeout(15);
}

// Called just before this Command runs the first time
void AutonomousCommand::Initialize() 
{
	CommandBase::aimer->aim(0.0);
	CommandBase::shooter->shootFrisbee(0.0);
}

// Called repeatedly when this Command is scheduled to run
void AutonomousCommand::Execute() 
{
	CommandBase::aimer->autonomousAim(0.88);
	CommandBase::shooter->autonomousShoot3();
	Wait(0.5);
}

// Make this return true when this Command no longer needs to run execute()
bool AutonomousCommand::IsFinished() 
{
	return true || IsTimedOut();
}

// Called once after isFinished returns true
void AutonomousCommand::End() 
{
	CommandBase::aimer->aim(0.0);
	CommandBase::shooter->shootFrisbee(0.0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void AutonomousCommand::Interrupted() 
{
	CommandBase::aimer->aim(0.0);
	CommandBase::shooter->shootFrisbee(0.0);
}
